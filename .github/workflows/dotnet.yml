# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net
name: .NET CI

env:
  registryName: fv65j5gu3jy6cmpnpreg.azurecr.io
  repositoryName: techboost/dotnetcoreapp
  dockerFolderPath: ./Application/src/RazorPagesTestSample
  tag: ${{github.run_number}}
  
on:
  push:
    branches: [ main ]
    paths: Application/**
  pull_request:
    branches: [ main ]
    paths: Application/**
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0
    
    - name: Restore dependencies
      run: dotnet restore ./Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj
    - name: Build
      run: dotnet build --no-restore ./Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj
    - name: Test
      run: dotnet test --no-build --verbosity normal ./Application/tests/RazorPagesTestSample.Tests/RazorPagesTestSample.Tests.csproj
      
  dockerBuildPush:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Docker Login
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
      uses: docker/login-action@v1.9.0
      with:
        # Server address of Docker registry. If not set then will default to Docker Hub
        registry: ${{ secrets.ACR_LOGIN_SERVER }}
        # Username used to log against the Docker registry
        username: ${{ secrets.ACR_USERNAME }}
        # Password or personal access token used to log against the Docker registry
        password: ${{ secrets.ACR_PASSWORD }}
        # Log out from the Docker registry at the end of a job
        logout: true
        
    - name: Docker Build
      run: docker build -t $registryName/$repositoryName:$tag --build-arg build_version=$tag $dockerFolderPath
      
    - name: Docker Push
      run: docker push $registryName/$repositoryName:$tag

  deploy-to-dev:
  
    runs-on: ubuntu-latest
    needs: dockerBuildPush
    environment:
      name: dev
      url: https://fv65j5gu3jy6c-dev.azurewebsites.net/
    
    steps:
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: azure/webapps-deploy@v2
        with:
          app-name: 'fv65j5gu3jy6c-dev'
          images: fv65j5gu3jy6cmpnpreg.azurecr.io/techboost/dotnetcoreapp:${{github.run_number}}

  deploy-to-test:
  
    runs-on: ubuntu-latest
    needs: deploy-to-dev
    environment:
      name: test
      url: https://fv65j5gu3jy6c-test.azurewebsites.net/
    
    steps:
    - uses: actions/checkout@v3
    
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - uses: azure/webapps-deploy@v2
      with:
        app-name: 'fv65j5gu3jy6c-test'
        images: fv65j5gu3jy6cmpnpreg.azurecr.io/techboost/dotnetcoreapp:${{github.run_number}}

  deploy-to-prod:
  
    runs-on: ubuntu-latest
    needs: deploy-to-test
    environment:
      name: prod
      url: https://fv65j5gu3jy6c-prod.azurewebsites.net/
    
    steps:
    - uses: actions/checkout@v3
    
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - uses: azure/webapps-deploy@v2
      with:
        app-name: 'fv65j5gu3jy6c-prod'
        images: fv65j5gu3jy6cmpnpreg.azurecr.io/techboost/dotnetcoreapp:${{github.run_number}}
